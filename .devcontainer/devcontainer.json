// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.0/containers/ubuntu
{
	"name": "Ubuntu",
	"image": "jrapudg/whole_body_mppi:v1.0",
	"runArgs": [
		"--network=host",
		"--privileged",
		"--cap-add=IPC_LOCK",
		"--cap-add=sys_nice",
		"--device=/dev/input",
		"--device=/dev/bus",
		"--volume=/dev/serial:/dev/serial:ro",
		"--name=legged_mppi_ctrl_container_go1",
		"-e",
		"DISPLAY",
		"-e",
		"XAUTHORITY",
		"-v",
		"/tmp/.docker.xauth:/tmp/.docker.xauth"
	],
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/ControlUser/legged_ctrl_ws/src/,type=bind",
	"workspaceFolder": "/home/ControlUser/legged_ctrl_ws",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",
	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"initializeCommand": "sh .devcontainer/configure_xauth.bash; echo $DISPLAY $XAUTHORITY",
	// "initializeCommand": "pwd",
	"remoteUser": "ControlUser",
	"postStartCommand": "nohup zsh -c 'ls'",
	"postCreateCommand": "zsh /home/ControlUser/legged_ctrl_ws/src/setup_ros_ws.sh",
	"customizations": {
		"vscode": {
			"extensions": [
				"donjayamanne.githistory",
				"mhutchie.git-graph",
				"ms-vscode.cmake-tools",
				"josetr.cmake-language-support-vscode",
				"cheshirekow.cmake-format",
				"tombonnike.vscode-status-bar-format-toggle",
				"xaver.clang-format",
				"ms-vscode.cpptools-extension-pack",
				"streetsidesoftware.code-spell-checker",
				"cschlosser.doxdocgen",
				"betwo.vscode-doxygen-runner",
				"ms-iot.vscode-ros",
				"smilerobotics.urdf",
				"redhat.vscode-xml",
				"redhat.vscode-yaml"
			]
		}
	},
	"settings": {
		"http.proxyStrictSSL": false,
		"clang-format.executable": "clang-format-10"
	},
	// for X display connection
	"containerEnv": {
		"DISPLAY": ":0",
		"QT_X11_NO_MITSHM": "1",
		"NVIDIA_VISIBLE_DEVICES": "ALL",
		"NVIDIA_DRIVER_CAPABILITIES": "compute,utility,graphics"
	},
	"mounts": [
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached"
	]
}